{"version":3,"sources":["components/FriendCard/index.js","components/Wrapper/index.js","components/Title/index.js","App.js","index.js"],"names":["FriendCard","props","react_default","a","createElement","className","onClick","handleClick","id","value","alt","name","src","image","Wrapper","children","Title","title","score","highScore","message","App","state","friends","currentScore","clicked","removeFriend","_this","filter","friend","setState","indexOf","handleIncrement","concat","handleReset","newScore","handleShuffle","shuffledFriends","array","i","length","j","Math","floor","random","_ref","shuffleFriends","_this2","this","components_Wrapper","components_Title","map","components_FriendCard","key","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"k/DAeeA,MAZf,SAAoBC,GAClB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAgBC,QAAS,kBAAML,EAAMM,YAAYN,EAAMO,KAAKC,MAAOR,EAAMO,IACtFN,EAAAC,EAAAC,cAAA,OAAKM,IAAKT,EAAMU,KAAMC,IAAKX,EAAMY,iBCA1BC,MAJf,SAAiBb,GACf,OAAOC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWJ,EAAMc,iBCa1BC,MAdf,SAAef,GACb,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yCACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aAAaJ,EAAMgB,OACjCf,EAAAC,EAAAC,cAAA,KAAGC,UAAU,QAAb,kBAAoCJ,EAAMiB,MAA1C,gBAA8DjB,EAAMkB,UAApE,KACAjB,EAAAC,EAAAC,cAAA,SAAIH,EAAMmB,uBC2FHC,6MAlFbC,MAAQ,CACNC,UACAC,aAAc,EACdL,UAAW,EACXC,QAAS,GACTK,QAAS,MAGXC,aAAe,SAAAlB,GAEb,IAAMe,EAAUI,EAAKL,MAAMC,QAAQK,OAAO,SAAAC,GAAM,OAAIA,EAAOrB,KAAOA,IAElEmB,EAAKG,SAAS,CAAEP,eAGlBhB,YAAc,SAAAC,IAC4B,IAApCmB,EAAKL,MAAMG,QAAQM,QAAQvB,IAC7BmB,EAAKK,kBACLL,EAAKG,SAAS,CAAEL,QAASE,EAAKL,MAAMG,QAAQQ,OAAOzB,MAEnDmB,EAAKO,iBAITF,gBAAkB,WAChB,IAAMG,EAAWR,EAAKL,MAAME,aAAe,EAC3CG,EAAKG,SAAS,CACZN,aAAcW,EACdf,QAAS,aAEPe,GAAYR,EAAKL,MAAMH,WACzBQ,EAAKG,SAAS,CAAEX,UAAWgB,IAE7BR,EAAKS,mBAGPF,YAAc,WACZP,EAAKG,SAAS,CACZN,aAAc,EACdL,UAAWQ,EAAKL,MAAMH,UACtBC,QAAS,sCACTK,QAAS,KAEXE,EAAKS,mBAIPA,cAAgB,WACd,IAAIC,EA3DR,SAAwBC,GACtB,IAAK,IAAIC,EAAID,EAAME,OAAS,EAAGD,EAAI,EAAGA,IAAK,CACzC,IAAIE,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,IADCM,EAElB,CAACP,EAAMG,GAAIH,EAAMC,IAAvCD,EAAMC,GAFkCM,EAAA,GAE9BP,EAAMG,GAFwBI,EAAA,GAI3C,OAAOP,EAsDiBQ,CAAevB,GACrCI,EAAKG,SAAS,CAAEP,QAASc,6EAIlB,IAAAU,EAAAC,KACP,OACE9C,EAAAC,EAAAC,cAAC6C,EAAD,KACE/C,EAAAC,EAAAC,cAAC8C,EAAD,CACEjC,MAAM,qBACNC,MAAO8B,KAAK1B,MAAME,aAClBL,UAAW6B,KAAK1B,MAAMH,UACtBC,QAAS4B,KAAK1B,MAAMF,UAItBlB,EAAAC,EAAAC,cAAA,WACC4C,KAAK1B,MAAMC,QAAQ4B,IAAI,SAAAtB,GAAM,OAC5B3B,EAAAC,EAAAC,cAACgD,EAAD,CAEEC,IAAKxB,EAAOrB,GACZD,YAAawC,EAAKxC,YAClByB,gBAAiBe,EAAKf,gBACtBE,YAAaa,EAAKb,YAClBE,cAAeW,EAAKX,cACpB5B,GAAIqB,EAAOrB,GACXK,MAAOgB,EAAOhB,kBA5ERyC,mBCXlBC,IAASC,OAAOtD,EAAAC,EAAAC,cAACqD,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.5a335a57.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction FriendCard(props) {\n  return (\n    <div className=\"card\">\n      <div className=\"img-container\" onClick={() => props.handleClick(props.id)} value={props.id}>\n        <img alt={props.name} src={props.image} />\n      </div>\n      \n      \n    </div>\n  );\n}\n\nexport default FriendCard;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Title(props) {\n  return (\n    <div className=\"jumbotron jumbotron-fluid text-center\">\n      <div className=\"container\">\n        <h1 className=\"display-4\">{props.title}</h1>\n        <p className=\"lead\">Current Score: {props.score} High Score: {props.highScore} </p>\n        <p>{props.message}</p>\n        \n      </div>\n    </div>\n\n  );\n}\n\nexport default Title;\n","import React, { Component } from \"react\";\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport friends from \"./friends.json\";\n\n\nfunction shuffleFriends(array) {\n  for (let i = array.length - 1; i > 0; i--) {\n    let j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n  return array;\n};\n\n\nclass App extends Component {\n  // Setting this.state.friends to the friends json array\n  state = {\n    friends,\n    currentScore: 0,\n    highScore: 0,\n    message: \"\",\n    clicked: [],\n  };\n\n  removeFriend = id => {\n    // Filter this.state.friends for friends with an id not equal to the id being removed\n    const friends = this.state.friends.filter(friend => friend.id !== id);\n    // Set this.state.friends equal to the new friends array\n    this.setState({ friends });\n  };\n\n  handleClick = id => {\n    if (this.state.clicked.indexOf(id) === -1) {\n      this.handleIncrement();\n      this.setState({ clicked: this.state.clicked.concat(id) });\n    } else {\n      this.handleReset();\n    }\n  };\n\n  handleIncrement = () => {\n    const newScore = this.state.currentScore + 1;\n    this.setState({\n      currentScore: newScore,\n      message: \"Correct!\"\n    });\n    if (newScore >= this.state.highScore) {\n      this.setState({ highScore: newScore });\n    }\n    this.handleShuffle();\n  };\n\n  handleReset = () => {\n    this.setState({\n      currentScore: 0,\n      highScore: this.state.highScore,\n      message: \"Wrong! Click an image to play again\",\n      clicked: []\n    });\n    this.handleShuffle();\n  };\n\n\n  handleShuffle = () => {\n    let shuffledFriends = shuffleFriends(friends);\n    this.setState({ friends: shuffledFriends });\n  };\n\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n    return (\n      <Wrapper>\n        <Title\n          title=\"Marvel Memory Game\"\n          score={this.state.currentScore}\n          highScore={this.state.highScore}\n          message={this.state.message}\n        />\n\n\n        <br />\n        {this.state.friends.map(friend => (\n          <FriendCard\n\n            key={friend.id}\n            handleClick={this.handleClick}\n            handleIncrement={this.handleIncrement}\n            handleReset={this.handleReset}\n            handleShuffle={this.handleShuffle}\n            id={friend.id}\n            image={friend.image}\n          />\n        ))}\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}